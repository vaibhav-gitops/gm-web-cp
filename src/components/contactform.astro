---
import Button from "./ui/button.astro";
---

<!-- // This is a working contact form //
     To make this contact form work, create your free access key from https://web3forms.com/
     Then you will get all form submissions in your email inbox. -->
<form
  method="POST"
  id="form"
  class="needs-validation"
  data-astro-reload
  novalidate>
  <input type="checkbox" class="hidden" style="display:none" name="botcheck" />
  <div class="mb-5">
    <input
      type="text"
      placeholder="Full Name"
      required
      class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100"
      name="name"
    />
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
      Please provide your full name.
    </div>
  </div>
  <div class="mb-5">
    <label for="email_address" class="sr-only">Email Address</label><input
      id="email_address"
      type="email"
      placeholder="Email Address"
      name="email"
      required
      class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100"
    />
    <div class="empty-feedback text-red-400 text-sm mt-1">
      Please provide your email address.
    </div>
    <div class="invalid-feedback text-red-400 text-sm mt-1">
      Please provide a valid email address.
    </div>
  </div>
  <div class="mb-3">
    <textarea
      name="message"
      required
      placeholder="Your Message"
      class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none h-36 focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100"
    ></textarea>
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
      Please enter your message.
    </div>
  </div>
  <button type="submit" class="submit-button" id="submitButton">
    <span id="buttonText">Send Message</span>
    <span class="spinner hidden" id="spinner"></span>
  </button>
  <div id="result" class="mt-3 text-center"></div>
</form>

<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }

  .submit-button {
    background-color: #00897B;
    color: white;
    border: none;
    border-radius: 0.25rem;
    margin-top: 0.5rem;
    padding: 0.75rem 0.5rem;
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s, opacity 0.2s;
    width: 100%;
  }

  .submit-button:hover {
    background-color: #00695C;
  }

  .spinner {
    display: inline-block;
    width: 16px;
    height: 16px;
    border: 2px solid white;
    border-top: 2px solid transparent;
    border-radius: 50%;
    animation: spin 0.7s linear infinite;
    margin-left: 8px;
  }

  .hidden {
    display: none;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
</style>

<script is:inline>
  document.addEventListener(
      "astro:page-load",
      () => {
        const form = document.getElementById("form");
        const result = document.getElementById("result");
        const buttonText = document.getElementById('buttonText');
        const spinner = document.getElementById('spinner');

        form.addEventListener("submit", function (e) {
          e.preventDefault();
          form.classList.add("was-validated");
          if (!form.checkValidity()) {
            form.querySelectorAll(":invalid")[0].focus();
            return;
          }

          spinner.classList.remove("hidden");
          buttonText.classList.add("hidden");

          const formData = new FormData(form);
          const object = Object.fromEntries(formData);
          const json = JSON.stringify(object);

          fetch("https://7tip4nqocj.execute-api.us-east-1.amazonaws.com/contactus", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Accept: "application/json",
            },
            body: json,
          })
              .then(async (response) => {
                let json = await response.json();
                if (response.status == 200) {
                  result.classList.add("text-green-500");
                  result.innerHTML = json.message;
                } else {
                  result.classList.add("text-red-500");
                  result.innerHTML = json.message;
                }
              })
              .catch((error) => {
                result.innerHTML = "Something went wrong!";
              })
              .then(function () {
                form.reset();
                buttonText.classList.remove("hidden");
                spinner.classList.add("hidden");
                form.classList.remove("was-validated");
                setTimeout(() => {
                  result.style.display = "none";
                }, 8000);
              });
        });
      },
      { once: true },
  );
</script>