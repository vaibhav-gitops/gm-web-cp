---
import { Dropdown as NavDropdown, DropdownItems } from "astro-navbar";

interface Props {
  title: string;
  lastItem: boolean;
  children: {
    title: string;
    path: string;
  }[];
}

const { title, lastItem, children } = Astro.props;
---

<li class="relative z-50 isolate">
  <NavDropdown class="group">
    <button
      class="flex items-center gap-1 w-full lg:w-auto transition lg:px-3 py-2 text-white hover:text-gray-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-gray-500 focus-visible:outline-none focus-visible:shadow-outline-gray rounded-full"
      style="font-size: 1rem">
      <span>{title}</span>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="3"
        stroke="currentColor"
        class="w-3 h-3 mt-0.5 group-open:rotate-180">
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M19.5 8.25l-7.5 7.5-7.5-7.5"></path>
      </svg>
    </button>
    <DropdownItems>
      <div
        class:list={[
          "lg:absolute w-full lg:w-48 z-50 border-l lg:border-0 border-slate-200",
          lastItem
            ? "lg:right-0 origin-top-right"
            : "lg:left-0 origin-top-left",
        ]}>
        <div
          class="px-3 lg:py-2 lg:bg-white lg:rounded-md lg:shadow lg:border flex flex-col">
          {
            children.map((item) => (
              <a
                href={item.path}
                class="py-1.5 text-gray-600 hover:text-black focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-gray-400 focus-visible:outline-none focus-visible:shadow-outline-gray rounded"
                style="font-size: 1rem">
                {item.title}
              </a>
            ))
          }
        </div>
      </div>
    </DropdownItems>
  </NavDropdown>
</li>
